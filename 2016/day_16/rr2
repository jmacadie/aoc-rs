#![warn(clippy::all, clippy::pedantic, clippy::nursery)]

pub fn main() {
    let data = include_str!("input.txt");
    println!("Part 1: {}", part_one(data));
    println!("Part 2: {}", part_two(data));
}

fn part_one(data: &str) -> usize {
    let cs = Checksum::new(data);
    println!("{:?}", cs);
    0
}

fn part_two(_data: &str) -> usize {
    0
}

#[derive(Debug)]
struct Checksum {
    a: u32,
    b: u32,
    root_len: usize,
}

impl Checksum {
    fn new(init: &str) -> Self {
        let init = init.trim();
        let a = u32::from_str_radix(init, 2).unwrap();
        let b = a;
        Self {
            a,
            b,
            root_len: init.len(),
        }
    }
}

#[cfg(test)]
mod tests {

    use super::*;

    #[test]
    fn one() {
        let data = include_str!("test.txt");
        assert_eq!(0, part_one(data));
    }

    #[test]
    fn two() {
        let data = include_str!("test.txt");
        assert_eq!(0, part_two(data));
    }
}
